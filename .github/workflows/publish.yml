name: Publish Python Package

on:
  workflow_dispatch:
  push:
    branches:
      - main

permissions:
  id-token: write
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Install ginger-apps
        run: bash -c "$(curl -fsSL https://raw.githubusercontent.com/ginger-society/infra-as-code-repo/main/rust-helpers/install-pipeline-clis.sh)"

      - name: Authenticate with ginger-auth
        id: ginger-auth
        run: ginger-auth token-login ${{ secrets.GINGER_TOKEN }}

      - name: Update pipeline to running
        run: ginger-connector update-pipeline stage running

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12' # Adjust the Python version as needed

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install setuptools wheel twine

      - name: Build package
        run: |
          python setup.py sdist bdist_wheel

      - name: Get PyPI token
        id: get-pypi-token
        run: echo "token=${{ secrets.PYPI }}" | tee -a $GITHUB_ENV

      - name: Publish package to PyPI
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI }}
        run: |
          python -m twine upload dist/*

      - name: Clean up build artifacts
        run: |
          rm -rf dist build *.egg-info

      - name: Update pipeline to passing
        run: ginger-connector update-pipeline stage passing

      - name: Trigger dependent pipelines
        run: ginger-connector trigger-dependent-pipelines ${{ secrets.GH_TOKEN }}
